# -*- coding: utf-8 -*-
"""Get_to_know_Amanda_game.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qmdal06ZMwImG0QK4zj8Ot2Dh_vZT8e1
"""

import pygame
import sys

# Initialize Pygame
pygame.init()

# Constants
WIDTH, HEIGHT = 800, 600
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
FONT = pygame.font.SysFont('Arial', 30)

# Questions and Answers
questions = [
    "What are you proud of?",
    "Where are you from?",
    "What is your favorite song?",
    "What motivates you to work hard?",
    "What’s your favorite class right now?"
]
#Answer images:
answer1 = pygame.image.load('Answer1.png')
answer2 = pygame.image.load('Answer2.png')
answer3 = pygame.image.load('Answer3.png')
answer4 = pygame.image.load('Answer4.png')
answer5 = pygame.image.load('Answer5.png')

answers = [answer1, answer2, answer3, answer4, answer5]

# Create a list of flags to track which questions have been clicked
question_clicked = [False] * len(questions)

# Initialize the screen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Get to know Amanda")
a = pygame.image.load('favicon.png').convert_alpha() #favicon
pygame.display.set_icon(a)


# Create a list to store the bounding rectangles of the questions
question_rects = []

def draw_questions():
    screen.fill(WHITE)
    y = 100
    question_rects.clear()  # Clear the list before adding new rectangles

    for i, question in enumerate(questions):
        question_text = FONT.render(question, True, WHITE)
        question_rect = question_text.get_rect(center=(WIDTH // 2, y))

        # Check if the question has been clicked
        if question_clicked[i]:
            pygame.draw.rect(screen, 'grey', question_rect)
        else:
            pygame.draw.rect(screen, 'pink', question_rect)

        screen.blit(question_text, question_rect)
        # Append the question rectangle to the list
        question_rects.append(question_rect)
        y += 80

# Load the icon image
icon = pygame.image.load('AmandaBrookeIcon.png').convert_alpha()
icon_rect = icon.get_rect(center=(400, 160))

button_rect = pygame.Rect(WIDTH // 2 - 50, HEIGHT // 1.5 - 20, 100, 40)

# Load begin button image
begin_button = pygame.image.load('Begin_button_image.png').convert_alpha()
begin_button_rect = begin_button.get_rect(center=(400, 500))

# Create a function to draw the start screen
def draw_start_screen():
    screen.fill(WHITE)

    # Draw the icon
    screen.blit(icon, icon_rect)

    # Draw title text with word wrapping
    title_text = (
        "Hello Brookies! You prompted: 'GPAs and college transcripts don’t paint a complete picture of a person. What else do we need to know about you?' So, I thought I would give you the opportunity to ask away in a virtual conversation! Some questions are silly, and some are more serious, but they all reveal pieces of me! Please enjoy this simple game."
    )
    wrapped_title_text = wrap_text(title_text, pygame.font.SysFont('Arial', 20))
    y = 300  # Start position for the text
    for line in wrapped_title_text:
        text_surface = pygame.font.SysFont('Arial', 20).render(line, True, BLACK)
        text_rect = text_surface.get_rect(center=(WIDTH // 2, y))
        screen.blit(text_surface, text_rect)
        y += text_rect.height + 6

    # Draw the "Begin!" button
    begin_button_rect = begin_button.get_rect(center=(400, 500))
    screen.blit(begin_button, begin_button_rect)

# Function to wrap text to fit within a given width
def wrap_text(text, font):
    words = text.split()
    lines = []
    current_line = ""
    for word in words:
        test_line = current_line + word + " "
        test_size = font.size(test_line)
        if test_size[0] <= 600:
            current_line = test_line
        else:
            lines.append(current_line)
            current_line = word + " "
    lines.append(current_line)
    return lines
### Answer Graphics
# Next Question Button
next_button = pygame.image.load('Next_Question.png')
next_rect = next_button.get_rect(center=(400, 500))
# Amanda Picture
import random
apic1 = pygame.image.load('QAm1.png')
apic2 = pygame.image.load('QAm2.png')
apic3 = pygame.image.load('QAm3.png')
#apic4 = pygame.image.load('QAm2.png')
amandas = [apic1, apic2, apic3, apic3, apic1]

# Function to draw answers
def draw_answers():
    screen.fill(WHITE)

    # Draw the answer for the clicked question
    answer_bubble = answers[clicked_question_index]
    answer_bubble_rect = answer_bubble.get_rect(center=(500, 190))
    screen.blit(answer_bubble, answer_bubble_rect)

    # Next button, Amanda pic
    screen.blit(next_button, next_rect)
    chosen_amanda_pic = amandas[clicked_question_index]
    amanda_pic_rect = chosen_amanda_pic.get_rect(center=(150, 350))
    screen.blit(chosen_amanda_pic, amanda_pic_rect)

# Initialize the game state
start_screen = True
game_screen = False

# Game loop for the start screen
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.MOUSEBUTTONDOWN:
            if start_screen and begin_button_rect.collidepoint(event.pos):
                start_screen = False  # Start the gameplay
                answer_screen = False
                game_screen = True

            for i, question_rect in enumerate(question_rects):
                if game_screen and question_rect.collidepoint(event.pos):
                    clicked_question_index = i
                    question_clicked[i] = True
                    game_screen = False
                    answer_screen = True

                elif answer_screen and next_rect.collidepoint(event.pos):
                  game_screen = True
                  answer_screen = False

    if start_screen:
        draw_start_screen()
    elif game_screen:
        draw_questions()
    elif clicked_question_index is not None:
        draw_answers()
    else:
      draw_questions()


    pygame.display.flip()

# Quit Pygame

pygame.quit()
sys.exit()



import random

random.randint(0, 4)

